[{"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/index.tsx":"1","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/reportWebVitals.ts":"2","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/App.tsx":"3","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/Doctor.tsx":"4","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/Admin.tsx":"5","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/Register.tsx":"6","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/Login.tsx":"7","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/PatientHome.tsx":"8","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/RequestList.tsx":"9","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/PatientNavBar.tsx":"10","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/assets/styles.js":"11","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/remote/remote-functions.ts":"12","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/remote/index.ts":"13","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/DoctorNavBar.tsx":"14"},{"size":509,"mtime":1610231284218,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1610037340781,"results":"17","hashOfConfig":"16"},{"size":1112,"mtime":1610409834910,"results":"18","hashOfConfig":"16"},{"size":268,"mtime":1610410510361,"results":"19","hashOfConfig":"16"},{"size":265,"mtime":1610410505824,"results":"20","hashOfConfig":"16"},{"size":18438,"mtime":1610408432632,"results":"21","hashOfConfig":"16"},{"size":18229,"mtime":1610411436585,"results":"22","hashOfConfig":"16"},{"size":703,"mtime":1610410406748,"results":"23","hashOfConfig":"16"},{"size":240,"mtime":1610226237688,"results":"24","hashOfConfig":"16"},{"size":5179,"mtime":1610411699321,"results":"25","hashOfConfig":"16"},{"size":265,"mtime":1610232998511,"results":"26","hashOfConfig":"16"},{"size":1584,"mtime":1610409695799,"results":"27","hashOfConfig":"16"},{"size":183,"mtime":1610404764196,"results":"28","hashOfConfig":"16"},{"size":5177,"mtime":1610226237687,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"18x09dl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/index.tsx",[],["63","64"],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/reportWebVitals.ts",[],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/App.tsx",["65","66"],"import React, {useState} from 'react';\nimport './assets/primary.scss';\nimport { BrowserRouter as Router, Link, Route, Switch, Redirect } from 'react-router-dom';\nimport { Register } from './components/Register';\nimport { Login } from './components/Login';\nimport { Admin } from './components/Admin';\nimport { Doctor } from './components/Doctor';\nimport { PatientHome } from './components/PatientHome';\nimport { RequestList } from './components/RequestList';\n\nfunction App() {\n  return (\n    <div>\n      <Router >\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/admin\" component={Admin} />\n          <Route path=\"/doctor\" component={Doctor} />\n          <Route path=\"/patient\" component={PatientHome} />\n          <Route path=\"/requestList\" component={RequestList} />\n          <Redirect from=\"/\" to=\"/login\" /> \n          \n        </Switch>\n        {/* <Link to=\"/login\"> login</Link> */}\n        {/* <Link to=\"/patient\">Patient</Link> */}\n      </Router> \n    </div>\n  );\n}\n\nexport default App;\n\n      ","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/Doctor.tsx",[],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/Admin.tsx",[],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/Register.tsx",["67"],"import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { IconButton, Tooltip, Paper, Grid, InputLabel, TextField, RadioGroup, FormControlLabel, Radio, Button, Select, MenuItem } from '@material-ui/core';\nimport { makeStyles, withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { doctorRegister, patientRegister } from '../remote/remote-functions';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '&$underline': {\n                borderBottom: '0',\n            },\n        },\n        underline: {\n            '&:after': {\n                borderBottom: '2px solid #012A4A',\n            },\n        },\n        backButton: {\n            '&:hover': {\n                color: '#014F86',\n            },\n            color: \"#012A4A\",\n            backgroundColor: \"#EDF2FB\",\n            position: 'absolute',\n            top: 5,\n            left: 5,\n        },\n        paper: {\n            padding: '2rem',\n            margin: 'auto',\n            width: '84%',\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            backgroundColor: \"#EDF2FB\",\n        },\n        rootButton: {\n            '&:hover': {\n                backgroundColor: \"#014F86\",\n            },\n            background: \"#012A4A\",\n            borderRadius: \"2rem\",\n            border: 0,\n            color: 'white',\n            fontWeight: 'bold',\n            height: 40,\n            boxShadow: '0 3px 5px 2px rgba(120, 154, 188, 0.3)',\n            width: '20%',\n            float: 'right'\n        },\n    })\n);\n\nexport const Register: React.FunctionComponent = (props) => {\n    const location: any = useLocation();\n    const history = useHistory();\n    const classes = useStyles();\n\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [age, setAge] = useState(0);\n    const [gender, setGender] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [language, setLanguage] = useState(\"\");\n    const [healthcardnumber, setHealthcardnumber] = useState(\"\");\n    const [education, setEducation] = useState(\"\");\n    const [certification, setCertification] = useState(\"\");\n    const [speciality, setSpeciality] = useState(\"\");\n    const [awards, setAwards] = useState(\"\");\n\n\n    const onRegisterSubmit = async () => {\n        const patientCredentials = {\n            username: location.state.username,\n            password: location.state.password,\n            firstname: firstname,\n            lastname: lastname,\n            age: age,\n            gender: gender,\n            phone: phone,\n            email: email,\n            address: address,\n            language: language,\n            healthcardnumber: healthcardnumber,\n            role: 'Patient'\n        }\n\n        const doctorCredentials = {\n            username: location.state.username,\n            password: location.state.password,\n            firstname: firstname,\n            lastname: lastname,\n            age: age,\n            gender: gender,\n            phone: phone,\n            email: email,\n            address: address,\n            language: language,\n            education: education,\n            certification: certification,\n            speciality: speciality,\n            awards: awards,\n            status: 'Pending',\n            role: 'Doctor'\n        }\n\n        if (location.state.role === 'Doctor') {\n            try {\n                let user = await doctorRegister(doctorCredentials)\n                history.push('/');\n            } catch (e) {\n                console.log(e);\n            }\n        }else if (location.state.role === 'Patient') {\n            try {\n                let user = await patientRegister(patientCredentials)\n                console.log(\"Doctor registered -> \" + JSON.stringify(user));\n                history.push({\n                    pathname: '/patient',\n                    state: {  \n                        patientInfo: user\n                    },\n                });\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n    }\n\n    const MyRadio = withStyles({\n        root: {\n            color: \"#012A4A\",\n            '&$checked': {\n                color: \"#014F86\",\n            },\n        },\n        checked: {},\n    })((props) => <Radio color=\"default\" {...props} />);\n\n    return (\n        <div>\n            <Tooltip title=\"Go Back\">\n                <IconButton\n                    className='float-left'\n                    onClick={() => history.push('/')}\n                    classes={{\n                        root: classes.backButton,\n                    }}>\n                    <ArrowBackIcon style={{ fontSize: 40 }} />\n                </IconButton>\n            </Tooltip>\n            <h2 id=\"registerationTitle\">Fill out the registeration details</h2>\n            <Paper elevation={3} classes={{ root: classes.paper }}>\n                <Grid container spacing={3} >\n                    <Grid item xs={6}>\n                        <InputLabel style={{ marginBottom: 0 }}> First Name </InputLabel>\n                        <TextField\n                            variant=\"filled\"\n                            fullWidth\n                            value={firstname}\n                            onChange={e => setFirstname(e.target.value)}\n                            style={{ marginBottom: 5, marginTop: 5 }}\n                            InputProps={{\n                                classes: {\n                                    root: classes.root,\n                                    underline: classes.underline,\n                                },\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <InputLabel style={{ marginBottom: 0 }}> Last Name </InputLabel>\n                        <TextField\n                            variant=\"filled\"\n                            fullWidth\n                            value={lastname}\n                            onChange={e => setLastname(e.target.value)}\n                            style={{ marginBottom: 5, marginTop: 5 }}\n                            InputProps={{\n                                classes: {\n                                    root: classes.root,\n                                    underline: classes.underline,\n                                },\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <InputLabel style={{ marginBottom: 0 }}> Age </InputLabel>\n                        <TextField\n                            type=\"number\"\n                            variant=\"filled\"\n                            fullWidth\n                            value={age}\n                            onChange={e => setAge(parseInt(e.target.value))}\n                            style={{ marginBottom: 5, marginTop: 5 }}\n                            InputProps={{\n                                classes: {\n                                    root: classes.root,\n                                    underline: classes.underline,\n                                },\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <InputLabel style={{ marginBottom: 0 }}> Gender </InputLabel>\n                        <RadioGroup row name=\"gender\" value={gender} onChange={(e: any) => setGender(e.target.value)}>\n                            <FormControlLabel value=\"female\" control={<MyRadio />} label=\"Female\" style={{ color: \"#012A4A\" }} />\n                            <FormControlLabel value=\"male\" control={<MyRadio />} label=\"Male\" style={{ color: \"#012A4A\" }} />\n                            <FormControlLabel value=\"other\" control={<MyRadio />} label=\"Other\" style={{ color: \"#012A4A\" }} />\n                        </RadioGroup>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <InputLabel style={{ marginBottom: 0 }}> Phone Number</InputLabel>\n                        <TextField\n                            variant=\"filled\"\n                            fullWidth\n                            value={phone}\n                            onChange={e => setPhone(e.target.value)}\n                            style={{ marginBottom: 5, marginTop: 5 }}\n                            InputProps={{\n                                classes: {\n                                    root: classes.root,\n                                    underline: classes.underline,\n                                },\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <InputLabel style={{ marginBottom: 0 }}> Email Address</InputLabel>\n                        <TextField\n                            variant=\"filled\"\n                            fullWidth\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                            style={{ marginBottom: 5, marginTop: 5 }}\n                            InputProps={{\n                                classes: {\n                                    root: classes.root,\n                                    underline: classes.underline,\n                                },\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <InputLabel style={{ marginBottom: 0 }}> Residential Address </InputLabel>\n                        <TextField\n                            variant=\"filled\"\n                            fullWidth\n                            value={address}\n                            onChange={e => setAddress(e.target.value)}\n                            style={{ marginBottom: 5, marginTop: 5 }}\n                            InputProps={{\n                                classes: {\n                                    root: classes.root,\n                                    underline: classes.underline,\n                                },\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <InputLabel style={{ marginBottom: 0 }}> Language Spoken </InputLabel>\n                        <TextField\n                            variant=\"filled\"\n                            fullWidth\n                            value={language}\n                            onChange={e => setLanguage(e.target.value)}\n                            style={{ marginBottom: 5, marginTop: 5 }}\n                            InputProps={{\n                                classes: {\n                                    root: classes.root,\n                                    underline: classes.underline,\n                                },\n                            }}\n                        />\n                    </Grid>\n                    {\n                        (location.state.role === 'Patient') ?\n                            <Grid item xs={12}>\n                                <InputLabel style={{ marginBottom: 0 }}> Health Card Number </InputLabel>\n                                <TextField\n                                    variant=\"filled\"\n                                    fullWidth\n                                    value={healthcardnumber}\n                                    onChange={e => setHealthcardnumber(e.target.value)}\n                                    style={{ marginBottom: 5, marginTop: 5 }}\n                                    InputProps={{\n                                        classes: {\n                                            root: classes.root,\n                                            underline: classes.underline,\n                                        },\n                                    }}\n                                />\n                            </Grid>\n                            :\n                            null\n                    }\n\n                    {\n                        (location.state.role === 'Doctor') ?\n                            <>\n                                <Grid item xs={6}>\n                                    <InputLabel style={{ marginBottom: 0 }}> Speciality </InputLabel>\n                                    <Select\n                                        variant=\"filled\"\n                                        value={speciality}\n                                        fullWidth\n                                        onChange={e => setSpeciality(String(e.target.value))}\n                                        style={{ marginBottom: 5, marginTop: 5 }}\n                                    >\n                                        <MenuItem value={'Allergy and immunology'}>Allergy and immunology</MenuItem>\n                                        <MenuItem value={'Anesthesiologist'}>Anesthesiologist</MenuItem>\n                                        <MenuItem value={'Cardiologist'}>Cardiologist</MenuItem>\n                                        <MenuItem value={'Dermatology'}>Dermatology</MenuItem>\n                                        <MenuItem value={'Emergency medicine'}>Emergency medicine</MenuItem>\n                                        <MenuItem value={'Family medicine'}>Family medicine</MenuItem>\n                                        <MenuItem value={'Medical genetics'}>Medical genetics</MenuItem>\n                                        <MenuItem value={'Neurology'}>Neurology</MenuItem>\n                                        <MenuItem value={'Ophthalmology'}>Ophthalmology</MenuItem>\n                                        <MenuItem value={'Pathology'}>Pathology</MenuItem>\n                                        <MenuItem value={'Physical medicine and rehabilitation'}>Physical medicine and rehabilitation</MenuItem>\n                                        <MenuItem value={'Psychiatry'}>Psychiatry</MenuItem>\n                                        <MenuItem value={'Radiation oncology'}>Radiation oncology</MenuItem>\n                                        <MenuItem value={'Surgery'}>Surgery</MenuItem>\n                                        <MenuItem value={'Urology'}>Urology</MenuItem>\n                                    </Select>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <InputLabel style={{ marginBottom: 0 }}> Certifications </InputLabel>\n                                    <TextField\n                                        variant=\"filled\"\n                                        fullWidth\n                                        value={certification}\n                                        onChange={e => setCertification(e.target.value)}\n                                        style={{ marginBottom: 5, marginTop: 5 }}\n                                        InputProps={{\n                                            classes: {\n                                                root: classes.root,\n                                                underline: classes.underline,\n                                            },\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <InputLabel style={{ marginBottom: 0 }}> Education Details </InputLabel>\n                                    <TextField\n                                        variant=\"filled\"\n                                        fullWidth\n                                        multiline\n                                        rows={5}\n                                        value={education}\n                                        onChange={e => setEducation(e.target.value)}\n                                        style={{ marginBottom: 5, marginTop: 5 }}\n                                        InputProps={{\n                                            classes: {\n                                                root: classes.root,\n                                                underline: classes.underline,\n                                            },\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <InputLabel style={{ marginBottom: 0 }}> Awards </InputLabel>\n                                    <TextField\n                                        variant=\"filled\"\n                                        fullWidth\n                                        multiline\n                                        rows={5}\n                                        value={awards}\n                                        onChange={e => setAwards(e.target.value)}\n                                        style={{ marginBottom: 5, marginTop: 5 }}\n                                        InputProps={{\n                                            classes: {\n                                                root: classes.root,\n                                                underline: classes.underline,\n                                            },\n                                        }}\n                                    />\n                                </Grid>\n                            </>\n                            :\n                            null\n                    }\n\n                    <Grid item xs={12}>\n                        <Button\n                            type=\"button\"\n                            variant=\"contained\"\n                            className=\"submit\"\n                            onClick={() => onRegisterSubmit()}\n                            classes={{\n                                root: classes.rootButton,\n                            }}\n                        > REGISTER </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Register;","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/Login.tsx",["68","69"],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/PatientHome.tsx",["70","71","72","73","74","75"],"import { Container } from '@material-ui/core';\nimport { Router } from '@material-ui/icons';\nimport React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport '../assets/patient.scss'\nimport { PatientNavBar } from './PatientNavBar';\nimport { RequestList } from './RequestList';\nimport { useLocation } from 'react-router-dom';\n\n\n\nexport const PatientHome: React.FunctionComponent = () => {\n    const location: any = useLocation();\n    return(\n        <>\n                <PatientNavBar>\n                    <div>{location.state.patientInfo.username}</div>\n                </PatientNavBar>\n\n          </>  \n        \n    )\n}\n\nexport default PatientHome;","/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/RequestList.tsx",[],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/PatientNavBar.tsx",["76","77","78","79"],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/assets/styles.js",[],["80","81"],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/remote/remote-functions.ts",[],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/remote/index.ts",[],"/Users/antardeepkaur/Desktop/Project2-Team2-FrontEndNew/frontend/src/components/DoctorNavBar.tsx",["82","83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":24},{"ruleId":"90","severity":1,"message":"94","line":3,"column":35,"nodeType":"92","messageId":"93","endLine":3,"endColumn":39},{"ruleId":"90","severity":1,"message":"95","line":114,"column":21,"nodeType":"92","messageId":"93","endLine":114,"endColumn":25},{"ruleId":"90","severity":1,"message":"96","line":13,"column":10,"nodeType":"92","messageId":"93","endLine":13,"endColumn":19},{"ruleId":"90","severity":1,"message":"97","line":129,"column":11,"nodeType":"92","messageId":"93","endLine":129,"endColumn":28},{"ruleId":"90","severity":1,"message":"98","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":19},{"ruleId":"90","severity":1,"message":"99","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"100","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":15},{"ruleId":"90","severity":1,"message":"101","line":4,"column":17,"nodeType":"92","messageId":"93","endLine":4,"endColumn":23},{"ruleId":"90","severity":1,"message":"94","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"102","line":8,"column":10,"nodeType":"92","messageId":"93","endLine":8,"endColumn":21},{"ruleId":"90","severity":1,"message":"102","line":20,"column":10,"nodeType":"92","messageId":"93","endLine":20,"endColumn":21},{"ruleId":"90","severity":1,"message":"99","line":21,"column":10,"nodeType":"92","messageId":"93","endLine":21,"endColumn":16},{"ruleId":"90","severity":1,"message":"100","line":22,"column":10,"nodeType":"92","messageId":"93","endLine":22,"endColumn":15},{"ruleId":"90","severity":1,"message":"101","line":22,"column":17,"nodeType":"92","messageId":"93","endLine":22,"endColumn":23},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"102","line":20,"column":10,"nodeType":"92","messageId":"93","endLine":20,"endColumn":21},{"ruleId":"90","severity":1,"message":"99","line":21,"column":10,"nodeType":"92","messageId":"93","endLine":21,"endColumn":16},{"ruleId":"90","severity":1,"message":"100","line":22,"column":10,"nodeType":"92","messageId":"93","endLine":22,"endColumn":15},{"ruleId":"90","severity":1,"message":"101","line":22,"column":17,"nodeType":"92","messageId":"93","endLine":22,"endColumn":23},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'user' is assigned a value but never used.","'exception' is defined but never used.","'handleChangeIndex' is assigned a value but never used.","'Container' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'RequestList' is defined but never used.","no-global-assign","no-unsafe-negation"]