[{"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/index.tsx":"1","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/reportWebVitals.ts":"2","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/App.tsx":"3","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Register.tsx":"4","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Login.tsx":"5","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Admin.tsx":"6","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Doctor.tsx":"7","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/PatientHome.tsx":"8","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/RequestList.tsx":"9","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/remote/remote-functions.ts":"10","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/PatientNavBar.tsx":"11","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/remote/index.ts":"12","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/ForumList.tsx":"13","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/index.ts":"14","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/Forum.tsx":"15","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/Message.tsx":"16","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/assets/styles.js":"17","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/protected-route/UserAuthRoute.tsx":"18"},{"size":509,"mtime":1610320371169,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1609892209341,"results":"21","hashOfConfig":"20"},{"size":1439,"mtime":1610320430390,"results":"22","hashOfConfig":"20"},{"size":18050,"mtime":1610320371168,"results":"23","hashOfConfig":"20"},{"size":17863,"mtime":1610320371167,"results":"24","hashOfConfig":"20"},{"size":227,"mtime":1610320371165,"results":"25","hashOfConfig":"20"},{"size":229,"mtime":1610320371166,"results":"26","hashOfConfig":"20"},{"size":664,"mtime":1610320371167,"results":"27","hashOfConfig":"20"},{"size":240,"mtime":1610227846592,"results":"28","hashOfConfig":"20"},{"size":1229,"mtime":1610320371171,"results":"29","hashOfConfig":"20"},{"size":5188,"mtime":1610320355127,"results":"30","hashOfConfig":"20"},{"size":162,"mtime":1610038485798,"results":"31","hashOfConfig":"20"},{"size":251,"mtime":1610320355126,"results":"32","hashOfConfig":"20"},{"size":23,"mtime":1610320355131,"results":"33","hashOfConfig":"20"},{"size":5952,"mtime":1610320355129,"results":"34","hashOfConfig":"20"},{"size":1578,"mtime":1610320355129,"results":"35","hashOfConfig":"20"},{"size":265,"mtime":1610320371165,"results":"36","hashOfConfig":"20"},{"size":618,"mtime":1610320371170,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rj8vvw",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/index.tsx",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/reportWebVitals.ts",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/App.tsx",["82","83"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Register.tsx",["84","85"],"import React from 'react';\n\nexport const Register: React.FunctionComponent = () => {\n    return(\n       <h1>Register</h1>\n    )\n}",["86","87"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Login.tsx",["88"],"import React from 'react';\nimport { Redirect } from 'react-router';\n\nexport const Login: React.FunctionComponent = () => {\n    return(\n       <h1>Login</h1>\n    )\n}","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Admin.tsx",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Doctor.tsx",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/PatientHome.tsx",["89","90","91","92","93","94"],"import { Container } from '@material-ui/core';\nimport { Router } from '@material-ui/icons';\nimport React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport '../assets/patient.scss'\nimport { PatientNavBar } from './PatientNavBar';\nimport { RequestList } from './RequestList';\n\n\n\nexport const PatientHome: React.FunctionComponent = () => {\n    return(\n        <>\n                <PatientNavBar>\n                    <div>hiiiii</div>\n                </PatientNavBar>\n\n          </>  \n        \n    )\n}","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/RequestList.tsx",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/remote/remote-functions.ts",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/PatientNavBar.tsx",["95","96","97","98"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { RequestList } from './RequestList';\nimport { Router } from '@material-ui/icons';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    toolbar: {\n      backgroundColor: \"#014F86\"\n    }\n  }),\n);\n\nconst navbarData = [\n  {\n    name: 'Home',\n    path: '/patient'\n  },\n  {\n    name: 'View requests',\n    path: '/requestList'\n  },\n  {\n    name: 'Create request',\n    path: '/'\n  },\n  {\n    name: 'Forum',\n    path: '/forumList'\n  }\n  \n]\n\n\nexport const PatientNavBar:React.FunctionComponent = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" noWrap>\n            Revature Medical Clinic\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n\n          <List>\n            {navbarData.map((text, index) => (\n              <ListItem component={Link} to={text.path} button key={text.name}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text.name} />\n                \n              </ListItem>\n            ))}\n          </List>\n        \n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Typography paragraph>\n          {props.children}\n        </Typography>\n      </main>\n    </div>\n  );\n}\n\nexport default PatientNavBar","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/remote/index.ts",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/ForumList.tsx",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/index.ts",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/Forum.tsx",["99","100","101","102","103","104"],"import { spawn } from \"child_process\";\nimport React, { useState, useEffect } from \"react\";\nimport { forumList, messageList } from \"./mockups\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Message } from \"./Message\";\nimport { Button, Container } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: \"36ch\",\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: \"inline\",\n    },\n  })\n);\n\nexport const Forum: React.FC = (props) => {\n  const [forums, setForums] = useState<any>([]);\n\n  const [message, setMessage] = useState<any>([]);\n\n  const [isShow, setIsShow] = useState<any>(false);\n\n  const [topic, setTopic] = useState<string>();\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const [inputShow, setInputShow] = useState<boolean>(false);\n\n  const [inputTopic,setInputTopic] = useState<string>();\n\n  async function getMessagesByForumId(forumId: number, topic: string) {\n    setIsShow(true);\n\n    setTopic(topic);\n    setLoading(true);\n    setInputShow(false)\n    let url = `http://localhost:8080/message/${forumId}`;\n    try {\n      let response = await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      setMessage(data);\n      setLoading(false);\n      return data;\n    } catch (error) {\n      console.log(\"Request Failed\", error);\n    }\n  }\n\n  const submitTopic=()=> {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ topic: inputTopic })\n  };\n      fetch('http://localhost:8080/forum', requestOptions)\n      .then(response => response.json());\n      setInputShow(false);\n      \n      window.location.reload();\n\n    \n  }\n\n  const handleChange=e=>{\n    console.log(`typed=>${e.target.value}`);\n    setInputTopic(e.target.value);\n  }\n\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const fetchforum = async () => {\n      try {\n        const responses = await fetch(\"http://localhost:8080/forum\");\n        const data = await responses.json();\n\n        setForums(data);\n        console.log(data);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    fetchforum();\n  }, []);\n\n  return (\n    <div>\n      {isShow ? (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            setIsShow(false);\n          }}\n        >\n          Back\n        </Button>\n      ) : null}\n      {isShow ? <Typography variant=\"h4\">{topic}</Typography> : null}\n      <Grid container spacing={3}>\n        \n        {!isShow ? (\n          <Grid item xs={4}>\n            <Button  onClick={()=>{setInputShow(true)}} >New Post</Button>\n            <List className={classes.root}>\n              {forums.map((r, index) => (\n                <ListItem\n                  alignItems=\"flex-start\"\n                  onClick={() => getMessagesByForumId(r.forumId, r.topic)}\n                >\n                  {/* <ListItemAvatar>\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n          </ListItemAvatar> */}\n\n                  <ListItemText\n                    primary={<Typography variant=\"h4\">{r.topic}</Typography>}\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.inline}\n                          color=\"textPrimary\"\n                        >\n                          by:{r.username}\n                          <br />\n                        </Typography>\n                        Submitted:{r.timeStamp}\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n              ))}\n\n              <Divider variant=\"inset\" component=\"li\" />\n            </List>\n          </Grid>\n        ) : null}\n        {inputShow ? (\n          <div>\n            <TextField id=\"standard-basic\" label=\"Input your topic\" name=\"topic\" value={inputTopic} onChange={handleChange}/><br/>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" onSubmit={()=>submitTopic()}>\n              Submit\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={()=>setInputShow(false)}>\n              Cancel\n            </Button>\n          </div>\n        ) : null}\n        {/* <Button onClick= {()=>getMessagesByForumId(3)}>click</Button> */}\n        {loading ? <Typography variant=\"h4\">Loading......</Typography> : null}\n        {isShow ? (\n          <Grid item xs={8}>\n            {!loading\n              ? message.map((m, index) => (\n                  <Message\n                    message={m.message}\n                    timestamp={m.timeStamp}\n                    doctor={!m.doctorId ? \"\" : m.doctorId.username}\n                    patient={!m.patientId ? \"\" : m.patientId.username}\n                  />\n                ))\n              : null}\n            {!loading ? (\n              <form className={classes.root} noValidate autoComplete=\"off\" >\n                <TextField id=\"standard-basic\" label=\"Write your post\" name=\"message\" />\n                <Button variant=\"contained\" color=\"primary\">\n                  Submit\n                </Button>\n              </form>\n            ) : null}\n          </Grid>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/Message.tsx",["105","106","107","108","109","110","111","112","113"],"import { spawn } from \"child_process\";\nimport React, { useState, useEffect } from \"react\";\nimport { forumList } from \"./mockups\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\ninterface MessageIdProps {\n  message: string;\n  timestamp: string;\n  doctor: string;\n  patient: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: \"36ch\",\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: \"inline\",\n    },\n  })\n);\n\nexport const Message: React.FC<MessageIdProps> = ({\n  message,\n  timestamp,\n  doctor,\n  patient,\n}) => {\n  const classes = useStyles();\n  return (\n    <>\n      <ListItemText\n        primary={<Typography variant=\"h4\">{message}</Typography>}\n        secondary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              by:{patient ? patient : doctor}\n              <br />\n            </Typography>\n            Submitted:{timestamp}\n          </React.Fragment>\n        }\n      />\n      \n    </>\n  );\n};\n","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/assets/styles.js",[],["114","115"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/protected-route/UserAuthRoute.tsx",[],{"ruleId":"116","severity":1,"message":"117","line":3,"column":35,"nodeType":"118","messageId":"119","endLine":3,"endColumn":39},{"ruleId":"116","severity":1,"message":"120","line":16,"column":16,"nodeType":"118","messageId":"119","endLine":16,"endColumn":26},{"ruleId":"116","severity":1,"message":"121","line":111,"column":21,"nodeType":"118","messageId":"119","endLine":111,"endColumn":25},{"ruleId":"116","severity":1,"message":"121","line":117,"column":21,"nodeType":"118","messageId":"119","endLine":117,"endColumn":25},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"116","severity":1,"message":"126","line":132,"column":11,"nodeType":"118","messageId":"119","endLine":132,"endColumn":28},{"ruleId":"116","severity":1,"message":"127","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":16},{"ruleId":"116","severity":1,"message":"129","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":15},{"ruleId":"116","severity":1,"message":"130","line":4,"column":17,"nodeType":"118","messageId":"119","endLine":4,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"131","line":9,"column":10,"nodeType":"118","messageId":"119","endLine":9,"endColumn":21},{"ruleId":"116","severity":1,"message":"131","line":20,"column":10,"nodeType":"118","messageId":"119","endLine":20,"endColumn":21},{"ruleId":"116","severity":1,"message":"128","line":21,"column":10,"nodeType":"118","messageId":"119","endLine":21,"endColumn":16},{"ruleId":"116","severity":1,"message":"129","line":22,"column":10,"nodeType":"118","messageId":"119","endLine":22,"endColumn":15},{"ruleId":"116","severity":1,"message":"130","line":22,"column":17,"nodeType":"118","messageId":"119","endLine":22,"endColumn":23},{"ruleId":"116","severity":1,"message":"132","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":15},{"ruleId":"116","severity":1,"message":"133","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":19},{"ruleId":"116","severity":1,"message":"134","line":3,"column":21,"nodeType":"118","messageId":"119","endLine":3,"endColumn":32},{"ruleId":"116","severity":1,"message":"135","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":22},{"ruleId":"116","severity":1,"message":"136","line":10,"column":8,"nodeType":"118","messageId":"119","endLine":10,"endColumn":14},{"ruleId":"116","severity":1,"message":"127","line":13,"column":18,"nodeType":"118","messageId":"119","endLine":13,"endColumn":27},{"ruleId":"116","severity":1,"message":"132","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":15},{"ruleId":"116","severity":1,"message":"137","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":25},{"ruleId":"116","severity":1,"message":"138","line":2,"column":27,"nodeType":"118","messageId":"119","endLine":2,"endColumn":36},{"ruleId":"116","severity":1,"message":"133","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":19},{"ruleId":"116","severity":1,"message":"139","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":12},{"ruleId":"116","severity":1,"message":"140","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":16},{"ruleId":"116","severity":1,"message":"141","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":15},{"ruleId":"116","severity":1,"message":"135","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":22},{"ruleId":"116","severity":1,"message":"136","line":10,"column":8,"nodeType":"118","messageId":"119","endLine":10,"endColumn":14},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'changeUser' is assigned a value but never used.","'user' is assigned a value but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'handleChangeIndex' is assigned a value but never used.","'Container' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'RequestList' is defined but never used.","'spawn' is defined but never used.","'forumList' is defined but never used.","'messageList' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]