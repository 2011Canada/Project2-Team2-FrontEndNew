[{"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\index.tsx":"1","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\reportWebVitals.ts":"2","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\App.tsx":"3","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Doctor.tsx":"4","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Register.tsx":"5","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\RequestList.tsx":"6","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Login.tsx":"7","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PatientHome.tsx":"8","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Admin.tsx":"9","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\ForumList.tsx":"10","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\DocRequestList.tsx":"11","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\assets\\styles.js":"12","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\remote\\remote-functions.ts":"13","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PatientNavBar.tsx":"14","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\DoctorNavBar.tsx":"15","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\common\\DoctorsList.tsx":"16","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\forum\\index.ts":"17","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\common\\DoctorInfoItem.tsx":"18","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\remote\\index.ts":"19","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\forum\\Forum.tsx":"20","C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PastRequestList.tsx":"21"},{"size":526,"mtime":1610678041598,"results":"22","hashOfConfig":"23"},{"size":440,"mtime":1610678041603,"results":"24","hashOfConfig":"23"},{"size":1528,"mtime":1610734541695,"results":"25","hashOfConfig":"23"},{"size":6366,"mtime":1610723776844,"results":"26","hashOfConfig":"23"},{"size":19674,"mtime":1610678041587,"results":"27","hashOfConfig":"23"},{"size":4736,"mtime":1610678041587,"results":"28","hashOfConfig":"23"},{"size":18663,"mtime":1610678041584,"results":"29","hashOfConfig":"23"},{"size":635,"mtime":1610678041585,"results":"30","hashOfConfig":"23"},{"size":4171,"mtime":1610678041577,"results":"31","hashOfConfig":"23"},{"size":514,"mtime":1610723776847,"results":"32","hashOfConfig":"23"},{"size":7990,"mtime":1610730882276,"results":"33","hashOfConfig":"23"},{"size":277,"mtime":1610678041575,"results":"34","hashOfConfig":"23"},{"size":6102,"mtime":1610734439512,"results":"35","hashOfConfig":"23"},{"size":7776,"mtime":1610678041586,"results":"36","hashOfConfig":"23"},{"size":7553,"mtime":1610727066732,"results":"37","hashOfConfig":"23"},{"size":687,"mtime":1610678041590,"results":"38","hashOfConfig":"23"},{"size":23,"mtime":1610678041595,"results":"39","hashOfConfig":"23"},{"size":4483,"mtime":1610678041589,"results":"40","hashOfConfig":"23"},{"size":190,"mtime":1610678041602,"results":"41","hashOfConfig":"23"},{"size":9046,"mtime":1610734439509,"results":"42","hashOfConfig":"23"},{"size":5917,"mtime":1610727021035,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sjr72t",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\index.tsx",[],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\reportWebVitals.ts",[],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\App.tsx",["88","89"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Doctor.tsx",["90","91","92","93","94","95","96","97","98","99","100","101"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Register.tsx",["102"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\RequestList.tsx",["103","104"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Login.tsx",["105"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PatientHome.tsx",["106","107"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Admin.tsx",["108"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\ForumList.tsx",[],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\DocRequestList.tsx",["109","110","111","112","113","114","115"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\assets\\styles.js",[],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\remote\\remote-functions.ts",[],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PatientNavBar.tsx",["116"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\DoctorNavBar.tsx",[],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\common\\DoctorsList.tsx",[],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\forum\\index.ts",[],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\common\\DoctorInfoItem.tsx",["117"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\remote\\index.ts",[],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\forum\\Forum.tsx",["118"],"// import { spawn } from \"child_process\";\r\nimport React, { useState, useEffect } from \"react\";\r\n// import { forumList, messageList } from \"./mockups\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\n// import ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// import ListItemText from \"@material-ui/core/ListItemText\";\r\n// import ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n// import Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import { Message } from \"./Message\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  postTopic,\r\n  postMessage,\r\n  getTopic,\r\n  getMessage,\r\n} from \"../../remote/remote-functions\";\r\nimport moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\n// RCE CSS\r\nimport \"react-chat-elements/dist/main.css\";\r\n// MessageBox component\r\nimport { MessageBox, ChatItem } from \"react-chat-elements\";\r\nimport \"../../assets/primary.scss\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: \"auto\",\r\n    },\r\n    inline: {\r\n      display: \"inline\",\r\n    },\r\n    bubble: {\r\n      width: \"-webkit-fill-available\",\r\n      backgroundColor: \"red\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const Forum: React.FC = (props) => {\r\n  const [forums, setForums] = useState<any>([]);\r\n\r\n  const [message, setMessage] = useState<any>([]);\r\n\r\n  const [isShow, setIsShow] = useState<any>(false);\r\n\r\n  const [topic, setTopic] = useState<string>();\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const [inputShow, setInputShow] = useState<boolean>(false);\r\n\r\n  const [inputTopic, setInputTopic] = useState<string>();\r\n\r\n  const [inputMessage, setInputMessage] = useState<string>();\r\n\r\n  const [currentTopic, setCurrentTopic] = useState<number>();\r\n\r\n  const [user, setUser] = useState<any>();\r\n\r\n  const location: any = useLocation();\r\n\r\n  async function getMessagesByForumId(forumId: number, topic: string) {\r\n    setIsShow(true);\r\n\r\n    setTopic(topic);\r\n    setLoading(true);\r\n    setInputShow(false);\r\n    setCurrentTopic(forumId);\r\n\r\n    let response = await getMessage(forumId);\r\n    console.log(response);\r\n    setMessage(response);\r\n    setLoading(false);\r\n    return response;\r\n  }\r\n\r\n  const onPostTopic = async () => {\r\n    console.log(\"inputTopic:\" + inputTopic);\r\n\r\n    if (inputTopic?.trim() === \"\" || inputTopic === undefined) {\r\n      console.log(\"null input\");\r\n      alert(\"input should not be null!!\");\r\n      return;\r\n    }\r\n\r\n    const topicstring = {\r\n      topic: inputTopic,\r\n      username: user.username,\r\n      role: user.role,\r\n    };\r\n    const data = await postTopic(topicstring);\r\n    console.log(data);\r\n\r\n    setForums([...forums, data]);\r\n    setInputTopic(\"\");\r\n    setInputShow(false);\r\n  };\r\n\r\n  const handleTopicChange = (e) => {\r\n    setInputTopic(e.target.value);\r\n  };\r\n  const handleMessageChange = (e) => {\r\n    setInputMessage(e.target.value);\r\n  };\r\n\r\n  const onPostMessage = async () => {\r\n    console.log(\"inputmessage:\" + inputMessage);\r\n\r\n    if (inputMessage?.trim() === \"\" || inputMessage === undefined) {\r\n      console.log(\"null input\");\r\n      alert(\"input should not be null!!\");\r\n      return;\r\n    }\r\n    const currentInputMessage =\r\n      user.role === \"Patient\"\r\n        ? {\r\n            message: inputMessage,\r\n            fromusername: user.username,\r\n            forumId: {\r\n              forumId: currentTopic,\r\n            },\r\n            patientId: {\r\n              patientId: user.patientId,\r\n              username: user.username,\r\n            },\r\n          }\r\n        : {\r\n            message: inputMessage,\r\n            fromusername: user.username,\r\n            forumId: {\r\n              forumId: currentTopic,\r\n            },\r\n            doctorId: {\r\n              doctorId: user.doctorId,\r\n              username: user.username,\r\n            },\r\n          };\r\n    const data = await postMessage(currentInputMessage);\r\n    console.log(data);\r\n\r\n    setInputMessage(\"\");\r\n    setMessage([...message, data]);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  function getContent() {\r\n    location.state.patientInfo !== undefined\r\n      ? setUser(location.state.patientInfo)\r\n      : setUser(location.state.doctorInfo);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getContent();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchforum = async () => {\r\n      const responses = await getTopic();\r\n      // console.log(responses);\r\n      setForums(responses);\r\n    };\r\n    fetchforum();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"auto\",\r\n        width: \"960px\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"lightblue\",\r\n      }}\r\n    >\r\n      {isShow ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setIsShow(false);\r\n          }}\r\n        >\r\n          Back\r\n        </Button>\r\n      ) : null}\r\n      {isShow ? (\r\n        <div>\r\n          <h1 style={{ textAlign: \"center\" }}>{topic}</h1>\r\n          <Divider />\r\n        </div>\r\n      ) : null}\r\n      <Grid container>\r\n        {!isShow ? (\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                setInputShow(true);\r\n              }}\r\n            >\r\n              New Post\r\n            </Button>\r\n            {inputShow ? (\r\n              <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"Input your topic\"\r\n                  fullWidth\r\n                  value={inputTopic}\r\n                  onChange={handleTopicChange}\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                />\r\n                <br />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={() => onPostTopic()}\r\n                >\r\n                  Post\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => setInputShow(false)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            ) : null}\r\n            <List className={classes.root}>\r\n              {forums.map((r, index) => (\r\n                <ChatItem\r\n                  avatar={\r\n                    r.role !== \"Patient\"\r\n                      ? \"https://www.cliparthut.com/images/150/FPesi.png\"\r\n                      : \"https://www.cliparthut.com/images/149/WDCFg.png\"\r\n                  }\r\n                  alt={r.username}\r\n                  title={r.topic}\r\n                  subtitle={\"by:\" + r.username}\r\n                  dateString={moment(r.timeStamp).format(\"YYYY-MM-DD HH:mm:ss\")}\r\n                  onClick={() => getMessagesByForumId(r.forumId, r.topic)}\r\n                />\r\n              ))}\r\n\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </List>\r\n          </Grid>\r\n        ) : null}\r\n\r\n        {/* <Button onClick= {()=>getMessagesByForumId(3)}>click</Button> */}\r\n        {loading ? <Typography variant=\"h4\">Loading......</Typography> : null}\r\n        {isShow ? (\r\n          <Grid item xs={12}>\r\n            {!loading\r\n              ? message.map((m, index) => (\r\n                  <MessageBox\r\n                    type={\"text\"}\r\n                    text={\"by:\" + m.fromusername}\r\n                    title={m.message}\r\n                    dateString={moment(m.timeStamp).format(\r\n                      \"YYYY-MM-DD HH:mm:ss\"\r\n                    )}\r\n                    position={\r\n                      user.username !== m.fromusername ? \"left\" : \"right\"\r\n                    }\r\n                  />\r\n                ))\r\n              : null}\r\n            {!loading ? (\r\n              <div\r\n                style={{\r\n                  float: \"right\",\r\n                  marginTop: \"30px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"Write your post\"\r\n                  name=\"message\"\r\n                  value={inputMessage}\r\n                  onChange={handleMessageChange}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={onPostMessage}\r\n                  style={{ float: \"right\", marginTop: \"15px\" }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            ) : null}\r\n          </Grid>\r\n        ) : null}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n",["119","120"],"C:\\Project_2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PastRequestList.tsx",["121","122","123","124","125","126","127","128","129","130"],{"ruleId":"131","severity":1,"message":"132","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":24},{"ruleId":"131","severity":1,"message":"135","line":3,"column":35,"nodeType":"133","messageId":"134","endLine":3,"endColumn":39},{"ruleId":"131","severity":1,"message":"132","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"136","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":20},{"ruleId":"131","severity":1,"message":"137","line":3,"column":22,"nodeType":"133","messageId":"134","endLine":3,"endColumn":29},{"ruleId":"131","severity":1,"message":"138","line":3,"column":67,"nodeType":"133","messageId":"134","endLine":3,"endColumn":77},{"ruleId":"131","severity":1,"message":"139","line":3,"column":79,"nodeType":"133","messageId":"134","endLine":3,"endColumn":95},{"ruleId":"131","severity":1,"message":"140","line":3,"column":97,"nodeType":"133","messageId":"134","endLine":3,"endColumn":102},{"ruleId":"131","severity":1,"message":"141","line":3,"column":104,"nodeType":"133","messageId":"134","endLine":3,"endColumn":110},{"ruleId":"131","severity":1,"message":"142","line":3,"column":112,"nodeType":"133","messageId":"134","endLine":3,"endColumn":118},{"ruleId":"131","severity":1,"message":"143","line":3,"column":120,"nodeType":"133","messageId":"134","endLine":3,"endColumn":128},{"ruleId":"131","severity":1,"message":"144","line":4,"column":22,"nodeType":"133","messageId":"134","endLine":4,"endColumn":32},{"ruleId":"131","severity":1,"message":"145","line":59,"column":11,"nodeType":"133","messageId":"134","endLine":59,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":155,"column":5,"nodeType":"148","messageId":"149","endLine":159,"endColumn":6},{"ruleId":"131","severity":1,"message":"150","line":117,"column":25,"nodeType":"133","messageId":"134","endLine":117,"endColumn":29},{"ruleId":"131","severity":1,"message":"151","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"153","line":87,"column":8,"nodeType":"154","endLine":87,"endColumn":10,"suggestions":"155"},{"ruleId":"131","severity":1,"message":"156","line":128,"column":11,"nodeType":"133","messageId":"134","endLine":128,"endColumn":28},{"ruleId":"131","severity":1,"message":"157","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":21},{"ruleId":"131","severity":1,"message":"158","line":11,"column":12,"nodeType":"133","messageId":"134","endLine":11,"endColumn":23},{"ruleId":"131","severity":1,"message":"159","line":37,"column":11,"nodeType":"133","messageId":"134","endLine":37,"endColumn":24},{"ruleId":"131","severity":1,"message":"151","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"160","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":21},{"ruleId":"131","severity":1,"message":"161","line":10,"column":18,"nodeType":"133","messageId":"134","endLine":10,"endColumn":26},{"ruleId":"131","severity":1,"message":"162","line":10,"column":34,"nodeType":"133","messageId":"134","endLine":10,"endColumn":50},{"ruleId":"131","severity":1,"message":"163","line":14,"column":10,"nodeType":"133","messageId":"134","endLine":14,"endColumn":36},{"ruleId":"131","severity":1,"message":"164","line":93,"column":14,"nodeType":"133","messageId":"134","endLine":93,"endColumn":18},{"ruleId":"152","severity":1,"message":"153","line":120,"column":8,"nodeType":"154","endLine":120,"endColumn":10,"suggestions":"165"},{"ruleId":"131","severity":1,"message":"135","line":23,"column":10,"nodeType":"133","messageId":"134","endLine":23,"endColumn":14},{"ruleId":"131","severity":1,"message":"166","line":65,"column":17,"nodeType":"133","messageId":"134","endLine":65,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":167,"column":6,"nodeType":"154","endLine":167,"endColumn":8,"suggestions":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"131","severity":1,"message":"151","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"160","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":21},{"ruleId":"131","severity":1,"message":"141","line":10,"column":10,"nodeType":"133","messageId":"134","endLine":10,"endColumn":16},{"ruleId":"131","severity":1,"message":"161","line":10,"column":18,"nodeType":"133","messageId":"134","endLine":10,"endColumn":26},{"ruleId":"131","severity":1,"message":"162","line":10,"column":34,"nodeType":"133","messageId":"134","endLine":10,"endColumn":50},{"ruleId":"131","severity":1,"message":"172","line":10,"column":52,"nodeType":"133","messageId":"134","endLine":10,"endColumn":61},{"ruleId":"131","severity":1,"message":"173","line":11,"column":30,"nodeType":"133","messageId":"134","endLine":11,"endColumn":48},{"ruleId":"131","severity":1,"message":"163","line":14,"column":10,"nodeType":"133","messageId":"134","endLine":14,"endColumn":36},{"ruleId":"131","severity":1,"message":"174","line":43,"column":7,"nodeType":"133","messageId":"134","endLine":43,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":98,"column":8,"nodeType":"154","endLine":98,"endColumn":10,"suggestions":"175"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'Button' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'withStyles' is defined but never used.","'history' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'user' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContent'. Either include it or remove the dependency array.","ArrayExpression",["176"],"'handleChangeIndex' is assigned a value but never used.","'RequestList' is defined but never used.","'patientInfo' is assigned a value but never used.","'location' is assigned a value but never used.","'PatientNavBar' is defined but never used.","'Checkbox' is defined but never used.","'TextareaAutosize' is defined but never used.","'textChangeRangeIsUnchanged' is defined but never used.","'data' is assigned a value but never used.",["177"],"'res' is assigned a value but never used.",["178"],"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"'TextField' is defined but never used.","'postDoctorResponse' is defined but never used.","'useStyles' is assigned a value but never used.",["181"],{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"182","fix":"185"},"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"186"},"Update the dependencies array to be: [getContent]",{"range":"187","text":"188"},{"range":"189","text":"188"},{"range":"190","text":"188"},{"range":"191","text":"188"},[2447,2449],"[getContent]",[3473,3475],[4735,4737],[2765,2767]]