[{"C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\index.tsx":"1","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\reportWebVitals.ts":"2","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\App.tsx":"3","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Register.tsx":"4","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Login.tsx":"5","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Doctor.tsx":"6","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Admin.tsx":"7","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\RequestList.tsx":"8","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PatientHome.tsx":"9","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PatientNavBar.tsx":"10","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\DoctorHome.tsx":"11","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\DoctorNavBar.tsx":"12"},{"size":519,"mtime":1610227387259,"results":"13","hashOfConfig":"14"},{"size":440,"mtime":1610227387269,"results":"15","hashOfConfig":"14"},{"size":1318,"mtime":1610231502959,"results":"16","hashOfConfig":"14"},{"size":135,"mtime":1610227387242,"results":"17","hashOfConfig":"14"},{"size":171,"mtime":1610227387212,"results":"18","hashOfConfig":"14"},{"size":131,"mtime":1610227387209,"results":"19","hashOfConfig":"14"},{"size":129,"mtime":1610227387204,"results":"20","hashOfConfig":"14"},{"size":250,"mtime":1610227387243,"results":"21","hashOfConfig":"14"},{"size":575,"mtime":1610227387215,"results":"22","hashOfConfig":"14"},{"size":5367,"mtime":1610227387240,"results":"23","hashOfConfig":"14"},{"size":561,"mtime":1610226009770,"results":"24","hashOfConfig":"14"},{"size":5177,"mtime":1610224933000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"4izccs",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\index.tsx",[],["57","58"],"C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\reportWebVitals.ts",[],"C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\App.tsx",["59"],"import React from 'react';\r\n// import './App.css';\r\nimport './assets/primary.scss';\r\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\r\nimport { Register } from './components/Register';\r\nimport { Login } from './components/Login';\r\nimport { Admin } from './components/Admin';\r\nimport { Doctor } from './components/Doctor';\r\nimport { PatientHome } from './components/PatientHome';\r\nimport { RequestList } from './components/RequestList';\r\nimport { DoctorHome } from './components/DoctorHome';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\" id=\"container\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <h1>Default Path</h1>} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/admin\" component={Admin} />\r\n          \r\n          <Route path=\"/patient\" component={PatientHome} />\r\n          <Route path=\"/requestList\" component={RequestList} />\r\n          <Route path=\"/doctor\" component={DoctorHome} />\r\n          \r\n        </Switch>\r\n        <Link to=\"/login\"> login</Link>&nbsp;|&nbsp;\r\n        <Link to=\"/patient\">Patient</Link>&nbsp;|&nbsp;\r\n        <Link to=\"/doctor\">Doctor</Link>&nbsp;\r\n      </Router> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Register.tsx",[],"C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Login.tsx",["60"],"import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nexport const Login: React.FunctionComponent = () => {\r\n    return(\r\n       <h1>Login</h1>\r\n    )\r\n}","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Doctor.tsx",[],"C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\Admin.tsx",[],"C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\RequestList.tsx",[],"C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PatientHome.tsx",["61","62","63","64","65","66"],"import { Container } from '@material-ui/core';\r\nimport { Router } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/patient.scss'\r\nimport { PatientNavBar } from './PatientNavBar';\r\nimport { RequestList } from './RequestList';\r\n\r\n\r\n\r\nexport const PatientHome: React.FunctionComponent = () => {\r\n    return(\r\n        <>\r\n                <PatientNavBar>\r\n                    <div>hiiiii</div>\r\n                </PatientNavBar>\r\n\r\n          </>  \r\n        \r\n    )\r\n}","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\PatientNavBar.tsx",["67","68","69","70"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { RequestList } from './RequestList';\r\nimport { Router } from '@material-ui/icons';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n    toolbar: {\r\n      backgroundColor: \"#014F86\"\r\n    }\r\n  }),\r\n);\r\n\r\nconst navbarData = [\r\n  {\r\n    name: 'Home',\r\n    path: '/patient'\r\n  },\r\n  {\r\n    name: 'View requests',\r\n    path: '/requestList'\r\n  },\r\n  {\r\n    name: 'Create request',\r\n    path: '/'\r\n  },\r\n  {\r\n    name: 'Forum',\r\n    path: '/'\r\n  }\r\n  \r\n]\r\n\r\n\r\nexport const PatientNavBar:React.FunctionComponent = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" noWrap>\r\n            Revature Medical Clinic\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n          <List>\r\n            {navbarData.map((text, index) => (\r\n              <ListItem component={Link} to={text.path} button key={text.name}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text.name} />\r\n                \r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        \r\n        <Divider />\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <Typography paragraph>\r\n          {props.children}\r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientNavBar","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\DoctorHome.tsx",["71","72","73","74","75","76"],"import { Container } from '@material-ui/core';\nimport { Router } from '@material-ui/icons';\nimport React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport '../assets/patient.scss'\nimport { DoctorNavBar } from './DoctorNavBar';\nimport { RequestList } from './RequestList';\n\n\n\nexport const DoctorHome: React.FunctionComponent = () => {\n    return(\n        <>\n                <DoctorNavBar>\n                    <div>Doctor Navbar Test</div>\n                </DoctorNavBar>\n\n          </>  \n        \n    )\n}","C:\\Revature\\proj2\\Project2-Team2-FrontEndNew\\frontend\\src\\components\\DoctorNavBar.tsx",["77","78","79","80"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { RequestList } from './RequestList';\nimport { Router } from '@material-ui/icons';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    toolbar: {\n      backgroundColor: \"#014F86\"\n    }\n  }),\n);\n\nconst navbarData = [\n  {\n    name: 'Home',\n    path: '/doctor'\n  },\n  {\n    name: 'View pending requests',\n    path: '/'\n  },\n  {\n    name: 'View past requests',\n    path: '/'\n  },\n  {\n    name: 'Forum',\n    path: '/'\n  }\n  \n]\n\n\nexport const DoctorNavBar:React.FunctionComponent = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" noWrap>\n            Revature Medical Clinic\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n\n          <List>\n            {navbarData.map((text, index) => (\n              <ListItem component={Link} to={text.path} button key={text.name}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text.name} />\n                \n              </ListItem>\n            ))}\n          </List>\n        \n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Typography paragraph>\n          {props.children}\n        </Typography>\n      </main>\n    </div>\n  );\n}\n\nexport default DoctorNavBar",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":8,"column":10,"nodeType":"87","messageId":"88","endLine":8,"endColumn":16},{"ruleId":"85","severity":1,"message":"89","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":18},{"ruleId":"85","severity":1,"message":"90","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":19},{"ruleId":"85","severity":1,"message":"91","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":16},{"ruleId":"85","severity":1,"message":"92","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":15},{"ruleId":"85","severity":1,"message":"93","line":4,"column":17,"nodeType":"87","messageId":"88","endLine":4,"endColumn":23},{"ruleId":"85","severity":1,"message":"94","line":5,"column":10,"nodeType":"87","messageId":"88","endLine":5,"endColumn":14},{"ruleId":"85","severity":1,"message":"95","line":8,"column":10,"nodeType":"87","messageId":"88","endLine":8,"endColumn":21},{"ruleId":"85","severity":1,"message":"95","line":20,"column":10,"nodeType":"87","messageId":"88","endLine":20,"endColumn":21},{"ruleId":"85","severity":1,"message":"91","line":21,"column":10,"nodeType":"87","messageId":"88","endLine":21,"endColumn":16},{"ruleId":"85","severity":1,"message":"92","line":22,"column":10,"nodeType":"87","messageId":"88","endLine":22,"endColumn":15},{"ruleId":"85","severity":1,"message":"93","line":22,"column":17,"nodeType":"87","messageId":"88","endLine":22,"endColumn":23},{"ruleId":"85","severity":1,"message":"90","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":19},{"ruleId":"85","severity":1,"message":"91","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":16},{"ruleId":"85","severity":1,"message":"92","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":15},{"ruleId":"85","severity":1,"message":"93","line":4,"column":17,"nodeType":"87","messageId":"88","endLine":4,"endColumn":23},{"ruleId":"85","severity":1,"message":"94","line":5,"column":10,"nodeType":"87","messageId":"88","endLine":5,"endColumn":14},{"ruleId":"85","severity":1,"message":"95","line":8,"column":10,"nodeType":"87","messageId":"88","endLine":8,"endColumn":21},{"ruleId":"85","severity":1,"message":"95","line":20,"column":10,"nodeType":"87","messageId":"88","endLine":20,"endColumn":21},{"ruleId":"85","severity":1,"message":"91","line":21,"column":10,"nodeType":"87","messageId":"88","endLine":21,"endColumn":16},{"ruleId":"85","severity":1,"message":"92","line":22,"column":10,"nodeType":"87","messageId":"88","endLine":22,"endColumn":15},{"ruleId":"85","severity":1,"message":"93","line":22,"column":17,"nodeType":"87","messageId":"88","endLine":22,"endColumn":23},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'Doctor' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Container' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'RequestList' is defined but never used.","no-global-assign","no-unsafe-negation"]