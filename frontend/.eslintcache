[{"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/index.tsx":"1","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/reportWebVitals.ts":"2","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/App.tsx":"3","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Register.tsx":"4","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Login.tsx":"5","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Admin.tsx":"6","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/PatientHome.tsx":"7","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/RequestList.tsx":"8","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/DocRequestList.tsx":"9","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/ForumList.tsx":"10","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/assets/styles.js":"11","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/remote/remote-functions.ts":"12","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/PatientNavBar.tsx":"13","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/DoctorNavBar.tsx":"14","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/common/DoctorsList.tsx":"15","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/index.ts":"16","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/common/DoctorInfoItem.tsx":"17","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/remote/index.ts":"18","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/Forum.tsx":"19","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Doctor.tsx":"20"},{"size":509,"mtime":1610320371169,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1609892209341,"results":"23","hashOfConfig":"22"},{"size":1407,"mtime":1610668130978,"results":"24","hashOfConfig":"22"},{"size":19255,"mtime":1610662524660,"results":"25","hashOfConfig":"22"},{"size":18192,"mtime":1610662524656,"results":"26","hashOfConfig":"22"},{"size":4052,"mtime":1610662524655,"results":"27","hashOfConfig":"22"},{"size":613,"mtime":1610662524659,"results":"28","hashOfConfig":"22"},{"size":4597,"mtime":1610495553091,"results":"29","hashOfConfig":"22"},{"size":8036,"mtime":1610666465486,"results":"30","hashOfConfig":"22"},{"size":508,"mtime":1610668802105,"results":"31","hashOfConfig":"22"},{"size":265,"mtime":1610320371165,"results":"32","hashOfConfig":"22"},{"size":4769,"mtime":1610666465490,"results":"33","hashOfConfig":"22"},{"size":7520,"mtime":1610495553090,"results":"34","hashOfConfig":"22"},{"size":7286,"mtime":1610666465489,"results":"35","hashOfConfig":"22"},{"size":661,"mtime":1610662524662,"results":"36","hashOfConfig":"22"},{"size":23,"mtime":1610320355131,"results":"37","hashOfConfig":"22"},{"size":4365,"mtime":1610662524660,"results":"38","hashOfConfig":"22"},{"size":183,"mtime":1610320760549,"results":"39","hashOfConfig":"22"},{"size":8297,"mtime":1610654041228,"results":"40","hashOfConfig":"22"},{"size":6204,"mtime":1610668499101,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rj8vvw",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/index.tsx",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/reportWebVitals.ts",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/App.tsx",["84","85","86"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Register.tsx",["87"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Login.tsx",["88"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Admin.tsx",["89"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/PatientHome.tsx",["90","91"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/RequestList.tsx",["92","93"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/DocRequestList.tsx",["94","95","96","97","98","99","100"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/ForumList.tsx",["101"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/assets/styles.js",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/remote/remote-functions.ts",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/PatientNavBar.tsx",["102"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/DoctorNavBar.tsx",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/common/DoctorsList.tsx",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/index.ts",[],["103","104"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/common/DoctorInfoItem.tsx",["105"],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/remote/index.ts",[],"/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/forum/Forum.tsx",["106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import { spawn } from \"child_process\";\nimport React, { useState, useEffect } from \"react\";\nimport { forumList, messageList } from \"./mockups\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Message } from \"./Message\";\nimport { Button, Container } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { postTopic, postMessage } from \"../../remote/remote-functions\";\nimport moment from \"moment\";\nimport { useLocation } from \"react-router-dom\";\n// RCE CSS\nimport \"react-chat-elements/dist/main.css\";\n// MessageBox component\nimport {\n  MessageBox,\n  MessageList,\n  ChatList,\n  ChatItem,\n  Input,\n} from \"react-chat-elements\";\nimport '../../assets/primary.scss';\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      backgroundColor: theme.palette.background.paper,\n      margin:\"auto\",\n    },\n    inline: {\n      display: \"inline\",\n    },\n    bubble:{\n      width: \"-webkit-fill-available\",\n      backgroundColor:\"red\"\n    },\n    \n    \n  })\n);\n\nexport const Forum: React.FC = (props) => {\n  const [forums, setForums] = useState<any>([]);\n\n  const [message, setMessage] = useState<any>([]);\n\n  const [isShow, setIsShow] = useState<any>(false);\n\n  const [topic, setTopic] = useState<string>();\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const [inputShow, setInputShow] = useState<boolean>(false);\n\n  const [inputTopic, setInputTopic] = useState<string>();\n\n  const [inputMessage, setInputMessage] = useState<string>();\n\n  const [currentTopic, setCurrentTopic] = useState<number>();\n\n  const [user, setUser] = useState<any>();\n\n  const location: any = useLocation();\n\n  async function getMessagesByForumId(forumId: number, topic: string) {\n    setIsShow(true);\n\n    setTopic(topic);\n    setLoading(true);\n    setInputShow(false);\n    setCurrentTopic(forumId);\n    let url = `http://localhost:8080/message/${forumId}`;\n    try {\n      let response = await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      setMessage(data);\n      setLoading(false);\n      return data;\n    } catch (error) {\n      console.log(\"Request Failed\", error);\n    }\n  }\n\n  const onPostTopic = async () => {\n    const topicstring = {\n      topic: inputTopic,\n      username: user.username,\n      role: user.role,\n    };\n    const data = await postTopic(topicstring);\n    console.log(data);\n\n    setForums([...forums, data]);\n    setInputTopic(\"\");\n    setInputShow(false);\n  };\n\n  const handleTopicChange = (e) => {\n    setInputTopic(e.target.value);\n  };\n  const handleMessageChange = (e) => {\n    setInputMessage(e.target.value);\n  };\n\n  const onPostMessage = async () => {\n    const currentInputMessage =\n      user.role === \"Patient\"\n        ? {\n            message: inputMessage,\n            fromusername:user.username,\n            forumId: {\n              forumId: currentTopic,\n            },\n            patientId: {\n              patientId: user.patientId,\n              username: user.username,\n            },\n          }\n        : {\n            message: inputMessage,\n            fromusername:user.username,\n            forumId: {\n              forumId: currentTopic,\n            },\n            doctorId: {\n              doctorId: user.doctorId,\n              username: user.username,\n            },\n          };\n    const data = await postMessage(currentInputMessage);\n    console.log(data);\n\n    setInputMessage(\"\");\n    setMessage([...message, data]);\n  };\n\n  const classes = useStyles();\n\n  function getContent() {\n    \n    location.state.patientInfo !== undefined\n      ? setUser(location.state.patientInfo)\n      : setUser(location.state.doctorInfo);\n      console.log(user);\n      \n  }\n\n  useEffect(() => {\n    getContent();\n  },[]);\n\n  useEffect(() => {\n    const fetchforum = async () => {\n      try {\n        const responses = await fetch(\"http://localhost:8080/forum\");\n        const data = await responses.json();\n\n        setForums(data);\n        console.log(data);\n        \n        \n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    fetchforum();\n  }, []);\n\n  return (\n    <div style={{margin:\"auto\", width:\"960px\",borderStyle:\"solid\",borderColor:\"lightblue\"}}>\n      {isShow ? (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            setIsShow(false);\n          }}\n        >\n          Back\n        </Button>\n      ) : null}\n      {isShow ? <div><h1 style={{textAlign:\"center\"}}>{topic}</h1><Divider /></div> : null}\n      <Grid container>\n        {!isShow ? (\n          <Grid item xs={12}>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                setInputShow(true);\n              }}\n            >\n              New Post\n            </Button>\n            {inputShow ? (\n          <div style={{textAlign:\"center\",marginTop:\"30px\"}}>\n            <TextField\n              id=\"standard-basic\"\n              label=\"Input your topic\"\n              fullWidth\n              value={inputTopic}\n              onChange={handleTopicChange}\n              multiline\n              variant=\"outlined\"\n            />\n            <br />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={() => onPostTopic()}\n            >\n              Post\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => setInputShow(false)}\n            >\n              Cancel\n            </Button>\n            \n          </div>\n        ) : null}\n            <List className={classes.root}>\n              {forums.map((r, index) => (\n                \n                <ChatItem\n                  avatar={r.role!==\"Patient\"?\"https://www.cliparthut.com/images/150/FPesi.png\":\"https://www.cliparthut.com/images/149/WDCFg.png\"}\n                  alt={r.username}\n                  title={r.topic}\n                  subtitle={\"by:\"+r.username}\n                  dateString={moment(r.timeStamp).format(\"YYYY-MM-DD HH:mm:ss\")}\n                  onClick={() => getMessagesByForumId(r.forumId, r.topic)}\n                />\n              ))}\n\n              <Divider variant=\"inset\" component=\"li\" />\n            </List>\n          </Grid>\n        ) : null}\n        \n        {/* <Button onClick= {()=>getMessagesByForumId(3)}>click</Button> */}\n        {loading ? <Typography variant=\"h4\">Loading......</Typography> : null}\n        {isShow ? (\n          <Grid item xs={12}>\n            {!loading\n              ? \n              \n                message.map((m, index) => (\n                  <MessageBox\n                    \n                    type={\"text\"}\n                    text={\"by:\"+m.fromusername}\n                    title={m.message}\n                    dateString={moment(m.timeStamp).format(\"YYYY-MM-DD HH:mm:ss\")}\n                    position={user.username!=m.fromusername?\"left\":\"right\"}\n                  />\n                ))\n              : null}\n            {!loading ? (\n              <div style={{float:\"right\",marginTop:\"30px\",textAlign:\"center\"}}>\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"Write your post\"\n                  name=\"message\"\n                  \n                  value={inputMessage}\n                  onChange={handleMessageChange}\n                  variant=\"outlined\"\n                  \n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onPostMessage}\n                  style={{float:\"right\",marginTop:\"15px\"}}\n                  \n                >\n                  Submit\n                </Button>\n              </div>\n            ) : null}\n          </Grid>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n","/Users/isasuke/p2/Project2-Team2-FrontEndNew/frontend/src/components/Doctor.tsx",["120","121","122","123","124","125","126","127","128","129","130","131"],{"ruleId":"132","severity":1,"message":"133","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":24},{"ruleId":"132","severity":1,"message":"136","line":3,"column":35,"nodeType":"134","messageId":"135","endLine":3,"endColumn":39},{"ruleId":"132","severity":1,"message":"137","line":12,"column":10,"nodeType":"134","messageId":"135","endLine":12,"endColumn":20},{"ruleId":"132","severity":1,"message":"138","line":117,"column":25,"nodeType":"134","messageId":"135","endLine":117,"endColumn":29},{"ruleId":"132","severity":1,"message":"139","line":128,"column":11,"nodeType":"134","messageId":"135","endLine":128,"endColumn":28},{"ruleId":"132","severity":1,"message":"140","line":37,"column":11,"nodeType":"134","messageId":"135","endLine":37,"endColumn":24},{"ruleId":"132","severity":1,"message":"141","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":21},{"ruleId":"132","severity":1,"message":"142","line":11,"column":12,"nodeType":"134","messageId":"135","endLine":11,"endColumn":23},{"ruleId":"132","severity":1,"message":"143","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":87,"column":8,"nodeType":"146","endLine":87,"endColumn":10,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"143","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":13},{"ruleId":"132","severity":1,"message":"148","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":21},{"ruleId":"132","severity":1,"message":"149","line":10,"column":18,"nodeType":"134","messageId":"135","endLine":10,"endColumn":26},{"ruleId":"132","severity":1,"message":"150","line":10,"column":34,"nodeType":"134","messageId":"135","endLine":10,"endColumn":50},{"ruleId":"132","severity":1,"message":"151","line":14,"column":10,"nodeType":"134","messageId":"135","endLine":14,"endColumn":36},{"ruleId":"132","severity":1,"message":"152","line":114,"column":15,"nodeType":"134","messageId":"135","endLine":114,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":147,"column":8,"nodeType":"146","endLine":147,"endColumn":10,"suggestions":"153"},{"ruleId":"132","severity":1,"message":"154","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":20},{"ruleId":"132","severity":1,"message":"136","line":23,"column":10,"nodeType":"134","messageId":"135","endLine":23,"endColumn":14},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"132","severity":1,"message":"159","line":65,"column":17,"nodeType":"134","messageId":"135","endLine":65,"endColumn":20},{"ruleId":"132","severity":1,"message":"160","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":15},{"ruleId":"132","severity":1,"message":"161","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":19},{"ruleId":"132","severity":1,"message":"162","line":3,"column":21,"nodeType":"134","messageId":"135","endLine":3,"endColumn":32},{"ruleId":"132","severity":1,"message":"163","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":16},{"ruleId":"132","severity":1,"message":"164","line":8,"column":8,"nodeType":"134","messageId":"135","endLine":8,"endColumn":20},{"ruleId":"132","severity":1,"message":"165","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":22},{"ruleId":"132","severity":1,"message":"166","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":14},{"ruleId":"132","severity":1,"message":"167","line":12,"column":10,"nodeType":"134","messageId":"135","endLine":12,"endColumn":17},{"ruleId":"132","severity":1,"message":"168","line":13,"column":18,"nodeType":"134","messageId":"135","endLine":13,"endColumn":27},{"ruleId":"132","severity":1,"message":"169","line":24,"column":3,"nodeType":"134","messageId":"135","endLine":24,"endColumn":14},{"ruleId":"132","severity":1,"message":"170","line":25,"column":3,"nodeType":"134","messageId":"135","endLine":25,"endColumn":11},{"ruleId":"132","severity":1,"message":"171","line":27,"column":3,"nodeType":"134","messageId":"135","endLine":27,"endColumn":8},{"ruleId":"144","severity":1,"message":"145","line":161,"column":5,"nodeType":"146","endLine":161,"endColumn":7,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":267,"column":44,"nodeType":"175","messageId":"176","endLine":267,"endColumn":46},{"ruleId":"132","severity":1,"message":"133","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"177","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":20},{"ruleId":"132","severity":1,"message":"178","line":3,"column":22,"nodeType":"134","messageId":"135","endLine":3,"endColumn":29},{"ruleId":"132","severity":1,"message":"179","line":3,"column":67,"nodeType":"134","messageId":"135","endLine":3,"endColumn":77},{"ruleId":"132","severity":1,"message":"180","line":3,"column":79,"nodeType":"134","messageId":"135","endLine":3,"endColumn":95},{"ruleId":"132","severity":1,"message":"181","line":3,"column":97,"nodeType":"134","messageId":"135","endLine":3,"endColumn":102},{"ruleId":"132","severity":1,"message":"182","line":3,"column":104,"nodeType":"134","messageId":"135","endLine":3,"endColumn":110},{"ruleId":"132","severity":1,"message":"183","line":3,"column":112,"nodeType":"134","messageId":"135","endLine":3,"endColumn":118},{"ruleId":"132","severity":1,"message":"184","line":3,"column":120,"nodeType":"134","messageId":"135","endLine":3,"endColumn":128},{"ruleId":"132","severity":1,"message":"185","line":4,"column":22,"nodeType":"134","messageId":"135","endLine":4,"endColumn":32},{"ruleId":"132","severity":1,"message":"186","line":59,"column":11,"nodeType":"134","messageId":"135","endLine":59,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":155,"column":5,"nodeType":"189","messageId":"190","endLine":159,"endColumn":6},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'DoctorHome' is defined but never used.","'user' is assigned a value but never used.","'handleChangeIndex' is assigned a value but never used.","'location' is assigned a value but never used.","'RequestList' is defined but never used.","'patientInfo' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContent'. Either include it or remove the dependency array.","ArrayExpression",["191"],"'PatientNavBar' is defined but never used.","'Checkbox' is defined but never used.","'TextareaAutosize' is defined but never used.","'textChangeRangeIsUnchanged' is defined but never used.","'data' is assigned a value but never used.",["192"],"'useHistory' is defined but never used.","no-native-reassign",["193"],"no-negated-in-lhs",["194"],"'res' is assigned a value but never used.","'spawn' is defined but never used.","'forumList' is defined but never used.","'messageList' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'Message' is defined but never used.","'Container' is defined but never used.","'MessageList' is defined but never used.","'ChatList' is defined but never used.","'Input' is defined but never used.",["195"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'Button' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'withStyles' is defined but never used.","'history' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",{"desc":"196","fix":"197"},{"desc":"196","fix":"198"},"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"199"},"Update the dependencies array to be: [getContent]",{"range":"200","text":"201"},{"range":"202","text":"201"},{"range":"203","text":"201"},[2361,2363],"[getContent]",[3773,3775],[4199,4201]]